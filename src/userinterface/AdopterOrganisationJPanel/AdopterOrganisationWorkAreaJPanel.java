/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.AdopterOrganisationJPanel;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.OrphanageEnterprise;
import Business.Network.Network;
import Business.Organization.AdopterOrganization;
import Business.Organization.Organization;
import Business.Organization.OrphanOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.AdoptionWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author shloka
 */
public class AdopterOrganisationWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
//    private EcoSystem business;
    private UserAccount userAccount;
    private AdopterOrganization adopterOrganisation;
    private AdoptionWorkRequest adoptionWorkRequest;
    private Enterprise enterprise;
    private Network network;
    private AdoptionWorkRequest request;
    /**
     * Creates new form LabAssistantWorkAreaJPanel
     */
    public AdopterOrganisationWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, Enterprise enterprise, Network network) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
//        this.business = business;
        this.adopterOrganisation = (AdopterOrganization)organization;
        this.enterprise= enterprise;
        this.network = network;
        populateTable();
    }
    
    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();
        
        model.setRowCount(0);
        for (WorkRequest request : adopterOrganisation.getWorkQueue().getWorkRequestList()){
            AdoptionWorkRequest adoptionWorkRequest = (AdoptionWorkRequest) request;
            Object[] row = new Object[6];
            row[0] = adoptionWorkRequest;
            row[1] = adoptionWorkRequest.getSender();
            row[2] = adoptionWorkRequest.getRequestDate();
            row[3] = adoptionWorkRequest.getOrphanage();
            row[4] = adoptionWorkRequest.getStatus();
            row[5]=  adoptionWorkRequest.getMessage();
           
            model.addRow(row);
        }
    }
        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        refreshJButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        verifyAdopterBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 204, 204));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Request ID", "Sender", "Request Date", "Orphanage", "Status", "Message"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);
        if (workRequestJTable.getColumnModel().getColumnCount() > 0) {
            workRequestJTable.getColumnModel().getColumn(0).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(1).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(2).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(3).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(4).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 140, 610, 100));

        refreshJButton.setText("Refresh");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });
        add(refreshJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 20, 80, -1));

        jLabel1.setText("Adopter Organisation");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(275, 10, 150, 40));

        verifyAdopterBtn.setText("Verify Adopter");
        verifyAdopterBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verifyAdopterBtnActionPerformed(evt);
            }
        });
        add(verifyAdopterBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 430, 140, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        populateTable();
    }//GEN-LAST:event_refreshJButtonActionPerformed

    private void verifyAdopterBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verifyAdopterBtnActionPerformed
        
        int selectedRow = workRequestJTable.getSelectedRow();
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a request");
            return;
        }
        
        AdoptionWorkRequest request = (AdoptionWorkRequest)workRequestJTable.getValueAt(selectedRow, 0);
        
        if(request.getStatus().equals("Requested")){
            request.setReceiver(userAccount);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            userProcessContainer.add("AdopterVerificationJPanel", new AdopterVerificationJPanel(userProcessContainer, request));
            layout.next(userProcessContainer);
        }
        else{
            JOptionPane.showMessageDialog(null, "Selected Request is not Eligible for Verification");
            return;
        }
            
    }//GEN-LAST:event_verifyAdopterBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JButton verifyAdopterBtn;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
